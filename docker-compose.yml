version: '3.8'

services:

  # MySQL Database
  db:
    image: mysql:latest
    container_name: mysql_db
    restart: always
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-scripts:/docker-entrypoint-initdb.d  # Mount initialization script
    networks:
      - app-network

  # Zookeeper (Required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - app-network

  # Kafka Broker
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - app-network

  # User Service
  user-service:
    build:
      context: user-management
    container_name: user_management
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/user_management_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - app-network
    depends_on:
      - db
      - kafka

  # Task Service
  task-service:
    build:
      context: task-management
    container_name: task_management
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/task_management_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - app-network
    depends_on:
      - db
      - kafka

  # Project Service
  project-service:
    build:
      context: project-management
    container_name: project_management
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/project_management_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - app-network
    depends_on:
      - db
      - kafka

  # Notification Service
  notification-service:
    build:
      context: notification-management
    container_name: notification_management
    ports:
      - "8084:8084"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/notification_management_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - app-network
    depends_on:
      - db
      - kafka

  # Team Service
  team-service:
    build:
      context: team-management
    container_name: team_management
    ports:
      - "8085:8085"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/team_management_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - app-network
    depends_on:
      - db
      - kafka

  # Work Service
  work-service:
    build:
      context: work-management
    container_name: work_management
    ports:
      - "8086:8086"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/work_management_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - app-network
    depends_on:
      - db
      - kafka

# Define a network for internal communication
networks:
  app-network:
    driver: bridge

# Define persistent volume for MySQL
volumes:
  mysql_data:
